import logging
from aiogram import Bot, Dispatcher, executor, types
import markups as nav
from site_url import computer
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import config



logging.basicConfig(level=logging.INFO)

bot = Bot(token=config.Token)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    await bot.send_message(message.from_user.id, text ='–†–∞–¥—ñ –≤—ñ—Ç–∞—Ç–∏ –≤–∞—Å —É —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω—ñ Rozetka!\n–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –ø—Ä–∏–¥–±–∞—Ç–∏ —Ç–æ–≤–∞—Ä —à–≤–∏–¥–∫–æ —ñ –±–µ–∑–ø–µ—á–Ω–æ.', reply_markup=nav.BotMenu)


     









@dp.message_handler()
async def bot_message(message: types.Message):
    if message.text == "–ú–∞–≥–∞–∑–∏–Ω":
        await bot.send_message(message.from_user.id, text = "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é —Ç–æ–≤–∞—Ä—É, —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏", reply_markup=nav.OtherMenu)
    elif message.text == "–û—Ñ—ñ—Å–Ω—ñ –∫—Ä—ñ—Å–ª–∞":
          await bot.send_message(message.from_user.id, text = "–û—Ñ—ñ—Å–Ω—ñ –∫—Ä—ñ—Å–ª–∞", reply_markup=nav.goods)
    elif message.text == "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é":
          await bot.send_message(message.from_user.id, text = "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", reply_markup=nav.BotMenu)
    elif message.text == "–î–∏–≤–∞–Ω–∏":
          await bot.send_message(message.from_user.id, text = "–î–∏–≤–∞–Ω–∏", reply_markup=nav.sofas)
    elif message.text == "–†–æ–±–æ—á—ñ —Å—Ç–æ–ª–∏":
          await bot.send_message(message.from_user.id, text = "–†–æ–±–æ—á—ñ —Å—Ç–æ–ª–∏", reply_markup=nav.table_school)
    elif message.text == "–ñ—É—Ä–Ω–∞–ª—å–Ω—ñ —Å—Ç–æ–ª–∏":
          await bot.send_message(message.from_user.id, text = "–ñ—É—Ä–Ω–∞–ª—å–Ω—ñ —Å—Ç–æ–ª–∏", reply_markup=nav.magazine_tables)
    elif message.text == "–ü–æ–ª–∏—Ü—ñ –¥–ª—è –∫–Ω–∏–≥":
          await bot.send_message(message.from_user.id, text = "–ü–æ–ª–∏—Ü—ñ –¥–ª—è –∫–Ω–∏–≥", reply_markup=nav.book_shelves)
    elif message.text == "–ö—Ä—ñ—Å–ª–æ –ê–ö–õ–ê–° –ì—ñ–ª–º–æ—Ä":
          await bot.send_message(message.from_user.id, text = "")
    
          computer_shop = InlineKeyboardMarkup()
          for teh in computer_shop:
            button = InlineKeyboardButton(text = computer, callback_data=computer)
            computer_shop.add(button)
          

         
   

@dp.callback_query_handler()
async def computer_info_handler(callback_query: types.CallbackQuery):
     if callback_query.data in computer.keys():
          await bot.send_photo(callback_query.message.chat.id, computer[callback_query.data]["photo"])
          computer_price = computer[callback_query.data]["price"]
          message = f"<b>Price: </b> {computer_price}"
          await bot.send_message(callback_query.message.chat.id, message, parse_mode='html')
     else:
          await bot.send_message(callback_query.message.chat.id, "–¢–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä—É –Ω–∞–∂–∞–ª—å –Ω–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñüòü")
          









  
  
if __name__ == '__main__':
     executor.start_polling(dp, skip_updates=True)